---
import Slides from '@layouts/Slides.astro'
---

<Slides title="Operating Systems">
  <section>
    <h2 class="r-fit-text">Operating Systems</h2>
    <blockquote>09/19/2024</blockquote>
  </section>

  <section>
    <h2 class="r-fit-text">Roles of an Operating System</h2>
  </section>

  <section>
    <h2 class="r-fit-text">Common Operating Systems</h2>
  </section>

  <section>
    <section>
      <h2 class="r-fit-text">Persistent vs. Volatile Storage</h2>
    </section>

    <section>
      <h3>Persistent Storage</h3>
      <ul>
        <li>AKA "permanent" storage</li>
        <li class="fragment">Retained when computer is off</li>
        <li class="fragment">Slow üê¢</li>
      </ul>
    </section>

    <section>
      <h3>Volatile Storage</h3>
      <ul>
        <li>Temporary; lost when computer is turned off</li>
        <li class="fragment">RAM is the most common volatile storage</li>
        <li class="fragment">Fast üêá</li>
      </ul>
    </section>
  </section>

  <!-- TODO demo storage types -->

  <section>
    <h2>Systems for Storing Data</h2>
  </section>

  <section>
    <h2>File Types???</h2>
  </section>

  <section>
    <h2>Data Types</h2>
  </section>

  <!-- TODO activity -->

  <section>
    <section>
      <h2>Loops</h2>
      <aside class="notes">
        <p>Your "make a quiz" assignment was tedious.</p>
        <p>What if you were required to have 100+ questions?</p>
        <p>What if you could jump to another line of code to repeat it?</p>
      </aside>
    </section>

    <!-- GOTO STATEMENT -->
    <section>
      <h3>GOTO</h3>
      <blockquote>AKA "jump" statement</blockquote>
    </section>

    <section>
      <h4>MIPS Example</h4>
      <pre>
        <code data-trim data-noescape class="language-mips">
          loop_len:
            add     $t1, $t0, $a0        # calculate character address
            lb      $t2, 0($t1)          # load character from memory
            beq     $t2, $zero, exit_len # found null-terminating character
            addi    $t0, $t0, 1          # increment counter
            j       loop_len             # loop again
        </code>
      </pre>
    </section>

    <section>
      <h4>C Example</h4>
      <pre>
        <code data-trim data-noescape>
          void checkEvenOrNot(int num) 
          &lbrace;
              if (num % 2 == 0)
                  goto even;
              else
                  goto odd;
          even:
              printf("%d is even", num);
              return;
          odd:
              printf("%d is odd", num);
          &rbrace;
        </code>
      </pre>
    </section>

    <section>
      <h4>What could go wrong?</h4>
      <ul>
        <li class="fragment">Code readability</li>
        <li class="fragment">Infinite loops</li>
        <li class="fragment">Security issues</li>
      </ul>
      <aside class="notes">
        <p>Modern languages only use loops</p>
      </aside>
    </section>

    <!-- WHILE LOOPS -->
    <section>
      <h3>While Loops</h3>
      <ul class="fragment">
        <li>
          Anatomy:
          <ul>
            <li class="fragment">Condition</li>
            <li class="fragment">Body</li>
          </ul>
        </li>
      </ul>
      <aside class="notes">
        <p>Most basic type. All other loops based on this.</p>
      </aside>
    </section>

    <section>
      <h4>Python Example</h4>
      <pre>
        <code data-trim data-noescape class="language-python">
          answer = 0
          guess = -1
          while guess != answer:
              guess = int(input("Guess a number: "))
          print("You got it!")
        </code>
      </pre>
    </section>

    <section>
      <h4>Infinite Loop</h4>
      <pre>
        <code data-trim data-noescape class="language-python">
          print("Hello, World!")
          while True:
              print("Hello again!")
        </code>
      </pre>
    </section>

    <section>
      <h4>Break statements</h4>
      <img src="https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExdDNzejVvZWtzdXcwZmFuZ2cyMW55YjA0MHoydWE3YTBrbzhjMGN2YSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/uHcghH7mo1LW9fFFEB/giphy.webp" alt="" height="400">
    </section>

    <section>
      <h4>Loop Until <code>q</code> Pressed</h4>
      <pre>
        <code data-trim data-noescape class="language-python">
          print("Hello, World!")
          while True:
              print("Hello again!")
              if input("Press q to quit") == "q":
                  break
        </code>
      </pre>
      <aside class="notes">
        <p>Good practice to avoid <code>break</code> statements</p>
      </aside>
    </section>

    <section>
      <h4>Loop Until <code>q</code> Pressed</h4>
      <pre>
        <code data-trim data-noescape class="language-python">
          print("Hello, World!")
          should_continue = True
          while should_continue:
              print("Hello again!")
              if input("Press q to quit") == "q":
                  should_continue = False
        </code>
      </pre>
    </section>

    <!-- TODO FOR LOOPS -->
    <section>
      <h3>For Loops</h3>
    </section>
  </section>

  <!-- TODO activity -->

  <section>
    <h2>Operators</h2>
  </section>

  <!-- TODO activity -->

  <section>
    <h2>Homework</h2>

    <!-- TODO -->
  </section>
</Slides>
